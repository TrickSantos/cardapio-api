// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id        String   @id @default(uuid())
  name      String
  logo      String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
  Place     Place[]
}

model User {
  id             String       @id @default(uuid())
  email          String       @unique
  password       String
  username       String
  isActive       Boolean      @default(true)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  roles          Role[]
  permissions    Permission[]
  contacts       Contact[]
}

model Permission {
  id        String   @id @default(uuid())
  name      String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles     Role[]
  users     User[]
}

model Role {
  id          String       @id @default(uuid())
  name        String
  isActive    Boolean      @default(true)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  permissions Permission[]
  users       User[]
}

model Contact {
  id        String   @id @default(uuid())
  userId    String
  firstName String
  lastName  String
  email     String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Place {
  id             String       @id @default(uuid())
  organizationId String
  name           String
  address        String
  city           String
  state          String
  zip            String
  phone          String
  website        String
  isActive       Boolean      @default(true)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  products       Product[]
  categories     Category[]
  Menu           Menu[]
  organization   Organization @relation(fields: [organizationId], references: [id])
}

model Product {
  id          String     @id @default(uuid())
  name        String
  description String
  placeId     String
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  place       Place      @relation(fields: [placeId], references: [id])
  price       Price[]
  categories  Category[]
}

model Price {
  id        String   @id @default(uuid())
  productId String
  value     Float
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
}

model Category {
  id        String    @id @default(uuid())
  placeId   String
  name      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
  place     Place     @relation(fields: [placeId], references: [id])
  Section   Section[]
}

model Menu {
  id          String    @id @default(uuid())
  placeId     String
  name        String
  description String
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  place       Place     @relation(fields: [placeId], references: [id])
  sections    Section[]
}

model Section {
  id         String   @id @default(uuid())
  menuId     String
  categoryId String
  name       String
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  menu       Menu     @relation(fields: [menuId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
}
